body
{
	background-color: #191d21;
	font-family: 'Open Sans', sans-serif;
	font-size: 20px;
	color: #efefef;
}

a:link 
{
    color: #fff;
	text-decoration: none;
}

a:visited 
{
    color: #fff;
}

a:hover 
{
    color: #fff;
}

a:active 
{    
	color: #fff;
}

.container
{
	margin-left: auto;
	margin-right: auto;
	width: 1000px;
	text-align: center;
	padding: 0;
	margin-bottom: 25px;
}

.postcard
{
	display: inline-block;
	width: 460px;
	text-align: center;
	padding: 5px;
}

.postcard p
{
	padding: 5px;
	margin-top: 10px;
}

h1
{
	font-size: 32px;
	font-weight: 400;
	color: #39a5f1;
	margin-top: 45px;	
	margin-bottom: 30px;
	letter-spacing: 10px;
	text-transform: uppercase;
}

/* Hover effects */

.photo1
{
	width: 450px;
	transition: all 0.2s ease-in-out;				/*transition zawsze w selektorze przed zmianą - sposób uprzejścia ustawiamy na "surowym elelemncie"*/												/*można ustawiać dla rożnych właściwości elementy - transform, opacity, itp., ale jeśłi chcemy kilka na raz animować, to zaimst nazwy 1 właściwości wpsiujemy słóko all - wtey zmieniane jest wszystko: transform oraz opacity!*/
}
/*inne wartości dla transition - ease, linear, ease-in, ease-out, ease-in-out, step-start, step-end, steps(), cubic-bezier*/

.photo1:hover
{
	-webkit-transform: scale(0.9); 	/*właściwość transform ma różne elementy i atrybuty, dzięki którym transformujemy dany element (np. scale, roate, itp.*/			/*transition służy do tego, aby był efekt płynnego przejścia pomiędzy stanami z transform - bo transform gwarantuje jedynie przejście  a nie płynny efekt*/
	-ms-transform: scale(0.9)
	transform: scale(0.9)
	opacity: 0.2;
}


/*transform-co się ma stać? transition-jak się ma stać?*/
/*można tez robić transform ze skalą na osi x i y (góa dół) ale obrazek straci wtedy swoje wymiary (scale(0.9, 1.4)*/

.photo2
{
	width: 450px;
	transition: transform .2s ease-in-out; /*można tutaj wpisac all, mozna tylko transition!  można napisac samo .2 (przeglądarka zrozumie, że chodzi o 2 dziesąte*/
}

.photo2:hover
{
	transform: scale(0.95 ) rotate(5deg); /*rotate - obrót deg (degres-stopnie). -5deg -> w przeciwnym kierunku do wskazówek zegara*/
	-webkit-transform: scale(0.95 ) rotate(5deg); /*do tej właściwości potrzebne są PREFISKY - któte dodajemy na początku transform, aby obsługiwane były nne przeglądarki*/
	-ms-transform: scale(0.95 ) rotate(5deg); /*prefiksy znajdziesz na stronie:http://shouldiprefix.com/ */
}



.photo3
{
	width: 450px;
}

.overlay
{
	position: relative; /*Pozycja relatywna pozwala użyć cztrech właściwości: left, right, top, bottom za pomocą których możemy swobodnie przesuwać element wzgldem układu oniesienia (względem miejsca gdzie zostało włożone względem flow witryny) */
	height: 278px;
	width: 450px;					/*domyśnie pozycja jesy static. I wtedy określanie pozycji z pomocą left, right, top, bottom. Pozostałe wartości position włąćzają możliwość użycia left, right, top, bottom. Te wartości to: position:relative, position:absolute, position:fixed */
}

.overlay .link
{
	position: absolute;
	display: block; /*styizujemy link i chcemy aby zachowywał sie jak div - element blokowy*/
	width: 450px;
	height: 65px;
	background-color: #111;
	left: 0px;
	bottom: 0px;
	opacity: 0;
	transition: all 0.5s ease-in-out;
}

.overlay:hover .link
{
	opacity: 0.8;
}
.photo4
{
	width: 450px;
}

.overlayT
{
	position: relative;
	width: 450px;
}

.overlayT .link
{
	position: absolute;
	display: block;
	width: 100%;
	height: 100%;
	background-color: #27a38d;
	left: 0px;
	top: 0px;
	opacity: 0;
	transition: all 0.5s ease-in-out;
}

.overlayT:hover .link
{
	opacity: 0.9;
}

.icon
{
	font-size: 72px;
	display:block;
	top: 25%;
	position: relative; /*pierwszy sposób na ustawienie ikony na środku*/
}

/*.icon
{
	font-size: 72px;
	display:block;
	top: 25%;
	right:25%;
	left: 25%;
	position: absolute; ----> inna możłiwość wypozycjnowania ikony na srodku, względem diva photo. Pozycja absolutna wymaga ustanowienia wszystkch odległosci*/


.icon p
{
	font-size:  20px;
}

.photo5
{
	width: 450px;
	height: 278px;
	overflow: hidden; /*ten zapis pozwala na to, żeby div photo się NIE POWIĘKSZAŁ w momencie kiedy po najechaniu na obrazek zmeni on swoją saklę*/
}

.photo5 img
{
	transition: all 0.5s ease-in-out; /*zapis dotyczy TYLKO img wewnątrz diva photo, żeby jego zmiana miała 0.5 s i była wolniejsza -czyli jak ma rzebiegać*/
}

.photo5:hover img /*zapis dotyczy transforamcji po najechaniu na img ma ono zmnieć skalę i się powiększyć*/
{
	-webkit-transform: scale(1.15);
	-ms-transform: scale(1.15);
	transform: scale(1.15);
}


.photo6
{
	width: 450px;
	height: 278px;
	overflow: hidden;
}

.photo6 img
{
	transition: all 0.8s ease-in-out;
}

.photo6:hover img
{
	-webkit-transform: scale(1.2) rotate(-5deg);
	-ms-transform: scale(1.2) rotate(-5deg);
	transform: scale(1.2) rotate(-5deg);
}
